name: CI/CD Staging

on:
  repository_dispatch:
    types: build-website-staging
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Virtual envs : https://help.github.com/en/articles/virtual-environments-for-github-actions
        os: [macOS-latest, windows-latest, ubuntu-latest]
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn install
        env:
          CI: "true"
          NODE_ENV: "staging"
        run: yarn install

      - name: yarn build
        env:
          CI: "true"
          NODE_ENV: "staging"
          GATSBY_TARGET_ENV: "staging"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_ADMIN_STAGING }}
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 50
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
        run: yarn build

      - name: yarn test
        env:
          CI: "true"
          NODE_ENV: "staging"
          GATSBY_TARGET_ENV: "staging"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_ADMIN_STAGING }}
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 50
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
        run: yarn test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: yarn install
        env:
          CI: "true"
          NODE_ENV: "staging"
        run: yarn install

      - name: yarn build
        env:
          CI: "true"
          NODE_ENV: "staging"
          GATSBY_TARGET_ENV: "staging"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_ADMIN_STAGING }}
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 50
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
        run: yarn build

      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.ZEIT_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: false
          vercel-org-id: ${{ secrets.ZEIT_ORGID_AUGORA }}
          vercel-project-id: ${{ secrets.ZEIT_PROJECTID_AUGORA }}
          scope: augora
          alias-domains: |
            preprod.augora.fr

      - name: Notify slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"C4H19LCN9\",\"text\":\"Augora deployed in staging environment :rocket:\"}'
        if: success()
