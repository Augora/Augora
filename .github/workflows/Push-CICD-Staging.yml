name: Push CI/CD Staging

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Virtual envs : https://help.github.com/en/articles/virtual-environments-for-github-actions
        os: [macOS-latest, windows-latest, ubuntu-latest]
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ matrix.os }}-yarn-

      - name: yarn install
        env:
          CI: "true"
          NODE_ENV: "staging"
        run: yarn install

      - name: yarn build
        env:
          CI: "true"
          NODE_ENV: "staging"
          GATSBY_TARGET_ENV: "staging"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_ADMIN_STAGING }}
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 50
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
        run: yarn build

      - name: yarn test
        env:
          CI: "true"
          NODE_ENV: "staging"
          GATSBY_TARGET_ENV: "staging"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_ADMIN_STAGING }}
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 50
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
        run: yarn test
      - name: The build has failed
        if: ${{ failure() }}
        uses: 8398a7/action-slack@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: custom
          fields: workflow,job,commit
          custom_payload: |
            {
              username: "Github Actions",
              icon_emoji: ":thunder:",
              attachments: [
                {
                  color: '#dc3545',
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": 'TEST :goat:'
                      },
                      "accessory": {
                        "type": "image",
                        "image_url": "https://i.imgur.com/skVMabZ.png",
                        "alt_text": "Augora"
                      }
                    }
                  ]
                }
              ]
            }

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ubuntu-latest-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ubuntu-latest-yarn-${{ hashFiles('**/yarn.lock') }}
            ubuntu-latest-yarn-

      - name: yarn install
        env:
          CI: "true"
          NODE_ENV: "staging"
        run: yarn install

      - name: yarn build
        env:
          CI: "true"
          NODE_ENV: "staging"
          GATSBY_TARGET_ENV: "staging"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_ADMIN_STAGING }}
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 50
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
        run: yarn build

      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.ZEIT_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: false
          vercel-org-id: ${{ secrets.ZEIT_ORGID_AUGORA }}
          vercel-project-id: ${{ secrets.ZEIT_PROJECTID_AUGORA }}
          scope: augora
          alias-domains: |
            preprod.augora.fr

      - name: Slack notification
        uses: 8398a7/action-slack@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
        with:
          status: custom
          fields: workflow,job,commit
          custom_payload: |
            {
              username: "Github Actions",
              icon_emoji: ":rocket:",
              attachments: [
                {
                  color: '${{ job.status }}' === 'success' ? '#28a745' : '${{ job.status }}' === 'failure' ? '#dc3545' : '#ffc107',
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": '${{ job.status }}' === 'success' ? '*https://preprod.augora.fr* \n Déploiement en pré-production terminé :heavy_check_mark: \n N\'oubliez pas de vérifier que vos changements sont effectifs :heart:' : 'Le déploiement est en échec :fire::fire_engine: \n Préparez vous à devoir hotfix avant de passer en prod :scream:'
                      },
                      "accessory": {
                        "type": "image",
                        "image_url": '${{ job.status }}' === 'success' ? "https://i.imgur.com/0TlV6Pt.png" : "https://i.imgur.com/skVMabZ.png",
                        "alt_text": "Augora"
                      }
                    }
                  ]
                }
              ]
            }
