name: CI Pull Request

on: pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Virtual envs : https://help.github.com/en/articles/virtual-environments-for-github-actions
        os: [macOS-latest, windows-latest, ubuntu-latest]
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn-

      - name: Gatsby Cache Folder
        uses: actions/cache@v1
        id: gatsby-cache-folder
        with:
          path: .cache
          key: ${{ matrix.os }}-cache-gatsby
          restore-keys: |
            ${{ matrix.os }}-cache-gatsby

      - name: Gatsby Public Folder
        uses: actions/cache@v1
        id: gatsby-public-folder
        with:
          path: public/
          key: ${{ matrix.os }}-public-gatsby
          restore-keys: |
            ${{ matrix.os }}-public-gatsby

      - name: yarn install, build, and test
        env:
          CI: "true"
          NODE_ENV: "pull_request"
          GATSBY_TARGET_ENV: "pull_request"
          FAUNADB_TOKEN: ${{ secrets.FAUNADB_TOKEN_ADMIN_STAGING }}
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 50
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
        run: |
          yarn install
          yarn build
          yarn test

      - name: Upload build output as artifact
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == '14.x' }}
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/download-artifact@v1
        with:
          name: build
          path: public

      - uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.ZEIT_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.ZEIT_ORGID_AUGORA }}
          vercel-project-id: ${{ secrets.ZEIT_PROJECTID_AUGORA }}
          scope: augora
          alias-domains: |
            {{PR_NUMBER}}.pullrequests.augora.fr

      - uses: 8398a7/action-slack@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: custom
          fields: workflow,job,commit
          custom_payload: |
            {
              username: 'Github Actions',
              icon_emoji: ':rocket:',
              attachments: [
                {
                  color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                  text: '${{ job.status }}' === 'success' ? `${process.env.AS_WORKFLOW} (${process.env.AS_COMMIT})\nPull request deployment succeeded!` : `${process.env.AS_WORKFLOW} (${process.env.AS_COMMIT})\nPull request deployment failed...`,
                }
              ]
            }
